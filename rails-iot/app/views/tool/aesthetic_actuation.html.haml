:coffeescript
  ports = #{@ports.to_json.html_safe}
  files = #{@files.to_json.html_safe}
  window.sens = #{@metadata.to_json.html_safe}
  _.extend window, window.sens.actuators

  PROJECT = CANVAS_COLOR: 'rgb(245, 244, 240)'
  window.am = null;
  window.vm = null;
  $ ->
    $('#main-alert').hide()
    window.ws = new WebStorage
    # FILE MANAGER
    dom = 'projectviewer canvas'
    window.fs = new ProjectFileManager
      paper: Utility.paperSetup(dom)
      files: files
      selector: $('#file-selector')
      onLoad: (data) ->
        $(dom).css 'background', PROJECT.CANVAS_COLOR
        AestheticActuation.enable paper
        return
    # SOCKET CONTROL
    window.sc = new SocketControl
      socket_port: 3015
      ports: ports
      trigger: $('#port-connect')
      selector: $('#port-selector')
      status: $('#port-status')
    $('#shade').fadeOut 0
    
    sc.subscribe 'input', (command)->
      sensorProcess(command)
     
    

#main-alert.alert.alert-warning
  %strong HEY!
  %span LETS START DESIGNING!
#ui2
  = render :partial => "tool/levels/file_selectors"
  %group.vert#levels
    = render :partial => "tool/levels/project"
    = render :partial => "tool/levels/actuators", :locals => {:actuators => @metadata.actuators}
    = render :partial => "tool/levels/datasignals"
    = render :partial => "tool/levels/behaviors"
    - render :partial => "tool/levels/sensors"
    - render :partial => "tool/levels/psychophysics"
    - render :partial => "tool/levels/composition"
    - render :partial => "tool/levels/sequencer"
    - render :partial => "tool/levels/distributed"
    - render :partial => "tool/levels/statemachine"
           
:css
  #ui2{
    height: 100%;
    overflow-y: scroll;
  }
  .ui{
  	height: 100%;
  }
  .blue{
    background: blue;
  }



 
