#zoom-bar
  %button#zoom-in.btn.btn-xs.btn-info
    %span.glyphicon.glyphicon-plus
  %br/
  %button#zoom-out.btn.btn-xs.btn-info
    %span.glyphicon.glyphicon-minus
  %br/
  %button#dm.brush.btn.btn-xs.btn-default{:tool => "DirectManipulationTool"}
    %span.glyphicon.glyphicon-hand-up
  %br/
  %button#pan.brush.btn.btn-xs.btn-default{:tool => "PanTool"}
    %span.glyphicon.glyphicon-fullscreen
:javascript
  // zoom.js
  
  ZoomBar.STEP = 0.1;
  ZoomBar.MAX = 10;
  ZoomBar.MIN = 0.1;
  
  function ZoomBar(container, starting_level, paper){
  	this.in_dom = container.children('#zoom-in');
  	this.out_dom = container.children('#zoom-out');
  	this.level = starting_level;
  	
  	this.init();
  }
  
  ZoomBar.prototype = {
  	init: function(){
  		var scope = this;
  		this.checkbounds();
  		$(this.in_dom).click(function(){ scope.in();})
  		$(this.out_dom).click(function(){ scope.out();})
  		this.update();
  	},
  	checkbounds: function(){
  		if(this.level > ZoomBar.MAX) this.level = ZoomBar.MAX;
  		if(this.level < ZoomBar.MIN) this.level = ZoomBar.MIN;
  	},
  	in: function(){
  		this.level += ZoomBar.STEP;
  		this.checkbounds();
  		this.update();
  	},
  	out: function(){
  		this.level -= ZoomBar.STEP;
  		this.checkbounds();
  		this.update();
  	}, 
  	update: function(){
  		paper.view.zoom = this.level;
  		paper.view.update();
  	}
  }
:css
  #zoom-in, #zoom-out{
  	/*height: 10px;*/
  	margin-bottom: 5px;
  }
  #pan.brush{
  	height: inherit;
  }
  #dm.brush{
  	height: inherit;
  }
   #zoom-bar{
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        padding: 4px 8px;
        color: #AAA;
        position: absolute;
        z-index: 1000;
        top: 100px;
        left: 5px;
         z-index: -1;
     }
