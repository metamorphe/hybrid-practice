%event#recorder.signal-design
  %button.btn.btn-xs.btn-info.toggle
    =glyph "collapse-up"
  .vert
    %button#record.design-title.btn-primary.trigger{:type => "trigger"}
      %span RECORD
      %span.command R
  #record-result.track-long{:data =>{:accept=> 0, :semantic => "enabled", :timescale => 10000, :tracks => 1, :exportable => "enabled"}}
    %datasignal#result
      %canvas.skip
%event#library.signal-design
  %button.btn.btn-xs.btn-info.toggle
    =glyph "collapse-up"
  .vert
    %button#apply-signal.design-title.btn-primary.trigger{:type => "trigger"}
      %span LIBRARY
      %span.command
  #hues.track-full.droppable{:data =>{:accept=> 100, :semantic => "disabled", :timescale => 1540, :tracks => 1, :exportable => "enabled", :codomain => "hue"}}

  .track-full.droppable.sortable{:data =>{:accept=> 100, :semantic => "enabled", :timescale => 10000, :tracks => 1, :exportable => "enabled"}}
    %datasignal.template
      %canvas.draggable{:data => "[0, 1, 0]", "period" => 1000}
    %datasignal
      %canvas.draggable{:data => "[0, 0.1, 0.2, 0.3, 0.4, 1]", "period" => 3000}
    %datasignal
      %canvas.draggable{:data => "[1, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0]", "period" => 3000}
    %datasignal
      %canvas.draggable{:data => "[0, 1, 0, 1, 0, 1, 0.5]", "period" => 5000}
    %button.btn.btn-xs.btn-primary.view-toggle
      =glyph "eye-open"
%event#timecut.signal-design
  %button.btn.btn-xs.btn-info.toggle
    =glyph "collapse-up"
  .vert
    %button#ts-cutter.vert-centered.design-title.btn-primary.trigger{:type => "trigger"}
      %span CUT
      %span.command [X]
  .track-full.droppable{:data =>{:accept=> 1, :dragInPlace => "enabled", :semantic => "enabled", :timescale => 10000, :tracks => 1, :exportable => "disabled"}}
    %button.btn.btn-xs.btn-danger.trash
      =glyph "trash"
    %button.btn.btn-xs.btn-primary.view-toggle
      =glyph "eye-open"
%event#adder.signal-design
  %button.btn.btn-xs.btn-info.toggle
    =glyph "collapse-up"
  .vert
    %button#ts-adder.vert-centered.design-title.btn-primary.trigger{:type => "trigger"}
      %span WELD
      %span.command [W]
  #add-result.track-unit{:data =>{:accept=> 0, :semantic => "enabled", :timescale => 10000, :tracks => 1, :exportable => "enabled"}}
    %datasignal#result
      %canvas.skip
  #adder-track.track-full.droppable.sortable{:data =>{:accept=> 100, :semantic => "enabled", :timescale => 10000, :tracks => 1}}
    %button.btn.btn-xs.btn-danger.trash
      =glyph "trash"
    %button.btn.btn-xs.btn-primary.view-toggle
      =glyph "eye-open"
%event#timemorph.signal-design
  %button.btn.btn-xs.btn-info.toggle
    =glyph "collapse-up"
  .vert
    %button#ts-adder.design-title.btn-primary.trigger{:type => "trigger"}
      %span FORGE
      %span.command
    %input#time-morph.sexy{:type=>"range", :min => 0, :max => 10000, :step => 100}
  #time-morph-track.track-full.droppable{:data =>{:accept=> 100, :semantic => "enabled", :timescale => 10000, :tracks => 1, :exportable => "enabled", :gamma_corrective => 0.5}}
    %button.btn.btn-xs.btn-danger.trash
      =glyph "trash"
    %button.btn.btn-xs.btn-primary.view-toggle
      =glyph "eye-open"

