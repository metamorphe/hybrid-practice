:coffeescript
  $ ->
    $("#behavior_name").on "change input", (e)->
      name = $(this).val().trim()
      if name == "" then name = "CURRENT_BEHAVIOR"
      current_behavior.data = 
        name: name
    $('#clear-behavior').click ()->
      current_behavior.clearStage()

    $('#repeat').click ()->
      $(this).toggleClass('active')
      if $("#repeat").hasClass('active')
        current_behavior.data = 
          repeat: "repeat"
      else
        current_behavior.data = 
          repeat: "no-repeat"

    window.current_behavior = new Behavior
      container: $('#current_behavior')
      data:
        name: "Stagger"
    

    $('#add-stage').click ()->
      current_behavior.data.manager.addStage()
    $('#add-stage').click()

%event#behaviors.composition-design.playground
  .toolbar.full-hoz
    %fieldset
      %button.btn.btn-xs.btn-ghost NAME
      %input#behavior_name{value: "BEHAVIOR_1", type: "text"}
    .btn-group
      %button.btn.btn-xs.btn-ghost#clear-behavior
        =glyph "trash"
        CLEAR
      %button.btn.btn-xs.btn-ghost
        =glyph "floppy-disk"
        SAVE
  .content.full-hoz  
    %button.btn.btn-xs.btn-info.toggle
      =glyph "collapse-up"
    .sidebar.vert.centered
      / %button#compose.design-title.btn-primary.trigger{:type => "trigger"}
      /   %span.name BEHAVIOR
      /   %span.command &lt;SPACE&gt
      %acceptor#current_behavior.behavior{:data => {:id=> 0, :accept=> 1}}
        %behaviornode.template
          .top
            %p 
              %span.name STAGGER BEHAVIOR
            %p.info
              
              
              %span
                %span #
                %span.actuators-length 20
              %span /
              %span
                %span.stages-length 1
                %span stages
          .bottom
            %p.time
              %span.period 2300 ms
            %p.repeat 
              %span (
              %span.val no-repeat
              %span ) 
    #behavior_environment.workarea.vert-centered-sink-top
      #timeruler.hoz
        %button#add-stage.btn.btn-xs.btn-ghost
          = glyph "plus"
          NEW STAGE

        %button#repeat.btn.btn-xs.btn-ghost
          = glyph "repeat"
          REPEAT
      - if true
        %acceptor.actuator.template{:data => {:accept=> 1}}
        %acceptor.datasignals.mini.template
          %button.btn.btn-xs.btn-danger.trash
            =glyph "trash"
          %button.btn.btn-xs.btn-primary.view-toggle
            =glyph "eye-open"
        %behavior.hoz.template
          #stage.vert-centered-sink-top
          #timetrack.vert-centered-sink-top
            #scrubber.vert-centered-sink-top
              #handle
              #timeline
            

        