%event#async.composition-design
  %button.btn.btn-xs.btn-info.toggle
    =glyph "collapse-up"
  .vert.centered
    %button#asyncher.design-title.btn-primary.trigger{:type => "trigger"}
      %span ASYNC
      %span.command
    %input.sexy{:type=>"range", :min => 0, :max => 1000, :step => 10}
  .track-full.droppable
%event#behaviors.composition-design.playground
  %button.btn.btn-xs.btn-info.toggle
    =glyph "collapse-up"
  .vert.centered
    %button#compose.design-title.btn-primary.trigger{:type => "trigger"}
      %span BEHAVIOR
      %span.command &lt;SPACE&gt
  #behavior_environment.vert-centered-sink-top
    %label{:contenteditable => true} BEHAVIOR NAME
    #timeruler.hoz
      %button#add-stage.btn-xxs.btn-danger
        =glyph "plus"
        ADD
    %behavior.hoz
      #stage.vert-centered-sink-top
        %acceptor.actuator.template{:data => {:accept=> 1}}
      #timetrack.vert-centered-sink-top
        #scrubber.vert-centered-sink-top
          #handle
          #timeline
        %acceptor.datasignals.template{:data =>{:accept=> 100, :semantic => "disabled", :timescale => 10000, :tracks => 3, :exportable => "disabled", :composeable => "enabled"}}
          %button.btn.btn-xs.btn-danger.trash
            =glyph "trash"
          %button.btn.btn-xs.btn-primary.view-toggle
            =glyph "eye-open"
        %acceptor.datasignals.accepted{:data =>{:accept=> 100, :semantic => "disabled", :timescale => 10000, :tracks => 3, :exportable => "disabled", :composeable => "enabled"}}
          %datasignal.composeable{:data =>{:signal => "[0, 1, 0, 1, 0, 1, 0.5]", "period" => 1000}}
            %canvas
          %datasignal.composeable{:data =>{:signal => "[0, 1, 0, 1, 0, 1, 0.5]", "period" => 2000}}
            %canvas
          %datasignal.composeable{:data =>{:signal => "[0, 1, 0, 1, 0, 1, 0.5]", "period" => 3000}}
            %canvas
          %button.btn.btn-xs.btn-danger.trash
            =glyph "trash"
          %button.btn.btn-xs.btn-primary.view-toggle
            =glyph "eye-open"