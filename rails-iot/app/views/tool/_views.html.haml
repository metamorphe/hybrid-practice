/ Views
:javascript
  const MAX_APA102C_RAY_LENGTH = 25;
  	function ViewManager(container){
  		this.container = container;
  		this.state = true;
  		this.view = "NORMAL";
  		this.last_view = "NORMAL"
  		this.init();
  		this.show();
  	}
  	ViewManager.CANVAS_COLOR = "rgb(245, 244, 240)";
  
  	ViewManager.prototype = {
  		 init: function(){
  			this.hide(true);
  			var scope = this;
  			this.update();
  			// CONTROL LOGIC
  			$('#view-icon').click(function(){
  				if(scope.state) scope.hide();
  				else scope.show();
  			});
  			$('#view-list ul li').click(function(){
  				$('#view-icon').html($(this).children('button').html());
  				$('#view-list ul li').removeClass('active');
  				$(this).addClass('active');
  				$('#view-icon').attr('class', $(this).children('button').attr('class')).removeClass('view').removeClass("btn-sm").addClass('pull-right');
  				scope.view = $(this).children('button').attr('name').toUpperCase();
  				scope.update();
  				bb.update();
  			});
  			this.update();
  		},
  		getCurrentView: function(){
  			return this.view;
  		},
  		update: function(){
  			var view = this.getCurrentView();
  			if(this.last_view != view){ 
  				this.last_view = view; 
  				sm.selection = []; 
  				sm.update();
  			}
  			console.log("VIEW", view);
  			
  					
  				e = Pipeline.getElements();
  				var all = [e.art, e.diff, e.leds, e.bo, e.bi, e.cp, e.dds, e.mc, e.base, e.wires];
  		
  				switch(view){
  					case "NORMAL":
  						$('#myCanvas').css('background',   ViewManager.CANVAS_COLOR);
  						var show = [e.art, e.diff, e.leds, e.dds, e.base];
  						var hide = [e.rays, e.cp, e.mc, e.bo, e.bi, e.nuts, e.wires];
  
  						_.each(e.leds, function(led){
  							led.set({
  								fillColor: led.colorID ? led.colorID : "#FFFFFF", 
  								strokeColor: "black",
  								strokeWidth: 1, 
  								opacity: 1.0
  							});
  						});
  						CanvasUtil.set(e.diff, {
  								fillColor: "#DFDFDF", 
  								strokeWidth: 3,
  								strokeColor: "black", 
  								opacity: 1.0
  						});
  						CanvasUtil.set(e.dds, {
  								fillColor: "#DFDFDF", 
  								strokeWidth: 1,
  								strokeColor: "black", 
  								dashArray: [2, 1],
  								opacity: 0.5
  						});
  						
  						break;
  					case "RAYS":
  						$('#myCanvas').css('background',   ViewManager.CANVAS_COLOR);
  						var show = [e.diff, e.leds, e.rays];
  						var hide = [e.art, e.bo, e.bi, e.cp, e.mc, e.base, e.wires];
  						
  						_.each(e.leds, function(led){
  							color = _.isUndefined(led.colorID) ?  "#FFFFFF": led.colorID;
  							
  							led.set({
  								fillColor: color, 
  								strokeColor: color,
  								strokeWidth: 1, 
  								opacity: 1.0
  							});
  						});
  						
  						CanvasUtil.set(e.diff, {
  							fillColor: "black", 
  							strokeWidth: 0
  						});
  						CanvasUtil.set(e.dds, {
  							fillColor: "black", 
  							strokeColor: "#333"
  						});
  
  						
  						break;
  					case "WHITE_RAYS":
  						$('#myCanvas').css('background',   ViewManager.CANVAS_COLOR);
  						var show = [e.diff, e.leds, e.rays];
  						var hide = [e.art, e.bo, e.bi, e.cp, e.mc, e.base, e.wires];
  						
  						_.each(e.leds, function(led){
  							color = "#FFFFFF";
  							
  							led.set({
  								fillColor: color, 
  								strokeColor: color,
  								strokeWidth: 1, 
  								opacity: 1.0
  							});
  						});
  						
  						CanvasUtil.set(e.diff, {
  							fillColor: "black", 
  							strokeColor: "#333"
  						});
  						CanvasUtil.set(e.dds, {
  							fillColor: "black", 
  							strokeColor: "#333"
  						});
  
  						
  						break;
  					case "LIGHTS":
  						$('#myCanvas').css('background', '#111');
  						var show = [e.rays];
  
  						_.each(e.leds, function(led){
  							
  							
  							led.set({
  								opacity: 0.2
  							});
  						});
  
  						var hide = [e.diff, e.art, e.bo, e.bi, e.cp, e.dds, e.mc, e.base, e.wires];
  
  						break;
  					default:
  						break;
  				}
  				
  				CanvasUtil.set(_.flatten(show), "visible", true);
  				CanvasUtil.set(_.flatten(hide), "visible", false);
  
  			paper.view.update();
  		},
  		show: function(now){
  			if(this.state) return;
  			this.state = true;
  			if(now){$("#view-list").show(); return;}
  			$("#view-list").toggle("slide", { direction: "up" }, 300);
  		},
  		hide: function(now){
  			if(!this.state) return;
  			this.state = false;
  			if(now){$("#view-list").hide(); return;}
  			$("#view-list").toggle("slide", { direction: "up" }, 300);
  		}
  	}
/
  Pipeline.getElements = function() {
  return {
  art: display.queryPrefix('ART'),
  diff: display.queryPrefix('DIF'),
  leds: display.queryPrefix('NLED'),
  bo: display.queryPrefix('BO'),
  bi: display.queryPrefix('BI'),
  cp: display.queryPrefix('CP'),
  dds: display.queryPrefix('DDS'),
  mc: display.queryPrefix("MC"),
  base: display.queryPrefix("BASE"),
  wires: display.queryPrefix("WIRE")
  }
  }
#views
  %button#view-icon.pull-right.btn.btn-primary
    %span.glyphicon.glyphicon-globe
  %br.clearfix/
  #view-list
    %ul
      %li.active
        %span NORMAL
        %button.view.btn-sm.btn.btn-primary{:name => "normal"}
          %span.glyphicon.glyphicon-globe
      %li
        %span COLORED RAYS
        %button.view.btn-sm.btn.btn-danger{:name => "rays"}
          R
      %li
        %span WHITE RAYS
        %button.view.btn-sm.btn.btn-info{:name => "white_rays"}
          W
      %li
        %span LIGHTS OUT
        %button.view.btn-sm.btn.btn-success{:name => "lights"}
          L
:css
  #views{
  		font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  		padding: 4px 8px;
  		color: #AAA;
  		position: absolute;
  		z-index: 1000;
  		top: 60px;
  		right: 25px;
  		z-index: -1;
  		/*text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);*/
   }
  	.view{
  		float: right;
  		width: 20px;
  		padding: 1px;
  		height: 20px;
  		margin-left: 5px;
  	}
  	.view:focus{
  		outline: none;
  	}
  	#view-icon{
  		width: 40px;
  	}
  		#view-icon:focus{
  			outline: none;
  		}
  	#view-list{
  		width: 175px;
  		text-align: right;
  		text-decoration: none;

  	}
  		#view-list ul{
  			list-style-type: none;
  		}
  		#view-list ul li{
  			margin: 2px 0;
  		}
  		#view-list ul li.active{
  			color: #888;
  		}
