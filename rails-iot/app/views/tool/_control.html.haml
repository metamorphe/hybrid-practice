/ color_palette.html
:javascript
  function ControlCenter(container){
    this.container = container;
    this.state = true;
    this.history = [null];
    this.idx = 0;
    this.style_before = {}
    this.led_style_before = {}
    this.led = null;
    this.init();

    // this.hide();
  }
  ControlCenter.prototype = {
    init: function(){
      // this.hide(true);
       colors = _.range(0, 361, 10);
      _.each(colors, function(hue){
        // console.log("CREATING", hue);
        var c = new paper.Color("red");
        c.saturation = 0.8;
        c.hue = hue;
        var hex = rgb2hex(c.toCanvasStyle());
        var cDOM = $('<span class="mini-color-swatch"></span>').attr('name', hex);
        $("#mini-color-palette").append(cDOM);
      });

      var scope = this;
      _.each($('.mini-color-swatch'), function(swatch){
        $(swatch).css('background', $(swatch).attr('name'));
        $(swatch).click(function(){
          var clickedColor = $(swatch).attr('name');
          $("#led-color").val(clickedColor);
          _.each(sm.currentSelectedLEDs(), function(led){
            led.colorID = new paper.Color(clickedColor);
            led.fillColor = led.colorID;
            // led.strokeColor = led.colorID;
          });
          paper.view.update();
          // vm.update();
          bb.update();
          if(scope.getCurrentColor() != clickedColor){
            $(".color-swatch").not(this)
              .removeClass('color-swatch-active');
            $(this).addClass('color-swatch-active');
            scope.history.push(clickedColor);
            scope.idx++;
          }
        });
      });

      $('#led-color').on('input', function() {
        clickedColor = $("#led-color").val();
        _.each(sm.currentSelectedLEDs(), function(led){
            led.colorID = new paper.Color(clickedColor);
            led.fillColor = led.colorID;
            // led.strokeColor = led.colorID;
        });
        paper.view.update();
        // vm.update();
        // bb.update();
      });

      $('#select-target').click(function(){
        paper.tool.holder.target_selection_mode = true;
        // $(this).removeClass('btn-default');
        // $(this).addClass('btn-primary');
      })
      $("#clear-target").click(function(){
        if(scope.led) scope.led.forceTarget = null;
        $("#target-view").attr('data-target', "");

      });
      
     
      $("#target-view").hover(function(){
        var targetID = parseInt($(this).attr('data-target'));
        if(_.isNaN(targetID)) return;
        var target = CanvasUtil.getIDs([targetID])[0];
        scope.style_before = {
          strokeColor: target.strokeColor, 
          strokeWidth: target.strokeWidth
        }
        scope.led_style_before = {
          strokeColor: scope.led.strokeColor, 
          strokeWidth: scope.led.strokeWidth
        }
        scope.led.set({
          strokeWidth: 2,
          strokeColor: "#00A8E1", 
        })
        target.set({
          strokeColor: "yellow", 
          strokeWidth: 4
        });
        paper.view.update();
      }, function(){
        var targetID = parseInt($(this).attr('data-target'));
        if(_.isNaN(targetID)) return;
        var target = CanvasUtil.getIDs([targetID])[0];
        target.set(scope.style_before);
        scope.led.set(scope.led_style_before);
        paper.view.update();
      });
    },
    updatePanel: function(led){
     
      led = CanvasUtil.getIDs([led])[0];
      this.led = led;
      this.container.find(".badge").html(led.lid).attr('cid', led.id);

      if(led.forceTarget)
        this.container.find("#target-view").attr("data-target", led.forceTarget);
      else
        this.container.find("#target-view").attr("data-target", led.target);

      if(led.colorID)
        this.container.find("#led-color").val(rgb2hex(led.colorID.toCanvasStyle()));
      if(led.forceTarget){
        this.container.find("#select-target").addClass('btn-success');
        this.container.find("#select-target").removeClass('btn-default');
      } else {
        this.container.find("#select-target").addClass('btn-default');
        this.container.find("#select-target").removeClass('btn-success');
      }
    },
    getCurrentColor: function(){
      var color = this.history[this.idx];
      if(_.isNull(color)) color = "#000000";
      return color;
    },
    getLastColor: function(){
      lastIdx = this.idx - 1 > 0 ? this.idx - 1: 0;
      return this.history[lastIdx];
    }, 
    show: function(now){
      if(this.state) return;
      this.state = true;
      if(now){this.container.show(); return;}
      this.container.toggle("slide", { direction: "left" }, 500);
    }, 
    hide: function(now){
      if(!this.state) return;
      this.state = false;
      if(now){this.container.hide(); return;}
      this.container.toggle("slide", { direction: "left" }, 500);
    }
  }
#sidebar-left-control
  #control-palette
    %ul.list-group
      /
        <li class="list-group-item">
        <label> LED </label>
        <em class="badge"> 1 </em>
        </li>
        <li class="list-group-item">
        <label> REGION </label>
        <br>
        <div class="btn-group pull-left">
        <button id="target-view" data-target="" class="btn btn-sm btn-info">VIEW</button>
        </div>
        <div class="btn-group pull-right">
        <button id="select-target" class="btn btn-sm btn-default">
        <span class="glyphicon glyphicon-screenshot"> </span>
        </button>
        <button  id="clear-target" class="btn btn-sm btn-default">
        <span class="glyphicon glyphicon-ban-circle"> </span>
        </button>
        </div>
        <br class="clearfix">
        </li>
      %li.list-group-item
        / <label> APPEARANCE </label>
        %br/
        %input#led-color.form-control.color-picker{:type => "color", :value => "#E74C3C"}/
        %br.clearfix/
        #mini-color-palette
          / <span class="color-swatch mini-color-swatch" name="#fe6e4b"></span>
          / <span class="color-swatch mini-color-swatch" name="#eeb84b"></span>
          / <span class="color-swatch mini-color-swatch" name="#6ebda7"></span>
          / <span class="color-swatch mini-color-swatch" name="#00A8E1"></span>
          %span.color-swatch.mini-color-swatch{:name => "#FFFFFF"}
          / <span class="color-swatch mini-color-swatch" name="#000000"></span>
        %br.clearfix/
        %br/
        /
          <button class="btn btn-sm btn-default">
          <span class="glyphicon glyphicon-eye-open"></span> RAYS
          </button>
:css
  .spacer{
    margin-top: 10px;
  }
  #sidebar-left-control{
      /* PALETTE */
     
      position: absolute;
      top: 65px;
      left: 0;
      width: 200px;
      height: 80%;
      z-index: 10;
      border-top-right-radius: 10px;
      border-bottom-right-radius: 10px;
      /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#181617+0,3b3a38+100 */
      background: #181617; /* Old browsers */
      background: -moz-linear-gradient(left, #181617 0%, #3b3a38 100%); /* FF3.6-15 */
      background: -webkit-linear-gradient(left, #181617 0%,#3b3a38 100%); /* Chrome10-25,Safari5.1-6 */
      background: linear-gradient(to right, #181617 0%,#3b3a38 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
      filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#181617', endColorstr='#3b3a38',GradientType=1 ); /* IE6-9 */
  
      -webkit-box-shadow: 5px 0px 24px 3px rgba(0,0,0,0.09);
      -moz-box-shadow: 5px 0px 24px 3px rgba(0,0,0,0.09);
      box-shadow: 5px 0px 24px 3px rgba(0,0,0,0.09);
    }
    .mini-color-swatch{
      float: left;
      width: 32px;
      height: 32px;
      margin: 4px 2px 4px 4px;
      border: #444 0.5px solid;
      border-radius: 90px;
  
  
      -webkit-box-shadow: 0px -5px 24px 3px rgba(0,0,0,0.09);
      -moz-box-shadow: 0px -5px 24px 3px rgba(0,0,0,0.09);
      box-shadow: 0px -5px 24px 3px rgba(0,0,0,0.09);
    }
    #control-palette{
      background: #111;
      /*background: #191718;*/
      padding: 3px;
      margin: 5px;
      width: 95%;
      height: 70%;
      border-top-right-radius: 5px;
      border-bottom-right-radius: 5px;
  
      -webkit-box-shadow: 0px -5px 24px 3px rgba(0,0,0,0.09);
      -moz-box-shadow: 0px -5px 24px 3px rgba(0,0,0,0.09);
      box-shadow: 0px -5px 24px 3px rgba(0,0,0,0.09);
  
    }
