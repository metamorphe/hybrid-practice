<!-- Views -->
<script type="text/javascript">
 const MAX_APA102C_RAY_LENGTH = 100;
	function ViewManager(container){
		this.container = container;
		this.state = true;
		this.view = "NORMAL";
		this.init();
		this.show();
	}
	ViewManager.CANVAS_COLOR = "rgb(245, 244, 240)";

	ViewManager.prototype = {
		 init: function(){
			this.hide(true);
			var scope = this;
			this.update();
			// CONTROL LOGIC
			$('#view-icon').click(function(){
				if(scope.state) scope.hide();
				else scope.show();
			});
			$('#view-list ul li').click(function(){
				$('#view-icon').html($(this).children('button').html());
				$('#view-list ul li').removeClass('active');
				$(this).addClass('active');
				$('#view-icon').attr('class', $(this).children('button').attr('class')).removeClass('view').removeClass("btn-sm").addClass('pull-right');
				scope.view = $(this).children('button').attr('name').toUpperCase();
				scope.update();
				bb.update();
			});
			this.update();
		},
		getCurrentView: function(){
			return this.view;
		},
		update: function(){
			var view = this.getCurrentView();
			console.log("VIEW", view);
			
					
			_.each(displays, function(display){
				e = Pipeline.getElements(display);
				var all = [e.art, e.diff, e.leds, e.bo, e.bi, e.cp, e.dds, e.mc, e.base, e.wires];
		
				switch(view){
					case "NORMAL":
						$('#myCanvas').css('background',   ViewManager.CANVAS_COLOR);
						var show = [e.art, e.diff, e.leds, e.dds, e.base, e.wires];
						var hide = [e.rays, e.cp, e.mc, e.bo, e.bi];

						CanvasUtil.set(e.leds, {
							fillColor: "#FFFFFF", 
							strokeColor: "black",
							strokeWidth: 1, 
							opacity: 1.0
						});
						CanvasUtil.set(e.diff, {
								fillColor: "#DFDFDF", 
								strokeWidth: 1,
								strokeColor: "black", 
								opacity: 1.0
						});
						CanvasUtil.set(e.dds, {
								fillColor: "#DFDFDF", 
								strokeWidth: 1,
								strokeColor: "black", 
								dashArray: [2, 1],
								opacity: 0.5
						});
						
						break;
					case "RAYS":
						$('#myCanvas').css('background',   ViewManager.CANVAS_COLOR);
						var show = [e.diff, e.leds, e.rays];
						var hide = [e.art, e.bo, e.bi, e.cp, e.mc, e.base, e.wires];
						
						_.each(e.leds, function(led){
							color = _.isUndefined(led.colorID) ?  "#FFFFFF": led.colorID;
							
							led.set({
								fillColor: color, 
								strokeColor: color,
								strokeWidth: 1, 
								opacity: 1.0
							});
						});
						
						CanvasUtil.set(e.diff, {
							fillColor: "black", 
							strokeWidth: 0
						});
						CanvasUtil.set(e.dds, {
							fillColor: "black", 
							strokeColor: "#333"
						});

						
						break;
					case "WHITE_RAYS":
						$('#myCanvas').css('background',   ViewManager.CANVAS_COLOR);
						var show = [e.diff, e.leds, e.rays];
						var hide = [e.art, e.bo, e.bi, e.cp, e.mc, e.base, e.wires];
						
						_.each(e.leds, function(led){
							color = "#FFFFFF";
							
							led.set({
								fillColor: color, 
								strokeColor: color,
								strokeWidth: 1, 
								opacity: 1.0
							});
						});
						
						CanvasUtil.set(e.diff, {
							fillColor: "black", 
							strokeColor: "#333"
						});
						CanvasUtil.set(e.dds, {
							fillColor: "black", 
							strokeColor: "#333"
						});

						
						break;
					case "LIGHTS":
						$('#myCanvas').css('background', '#111');
						var show = [e.rays];

						_.each(e.leds, function(led){
							
							
							led.set({
								opacity: 0.2
							});
						});

						var hide = [e.diff, e.art, e.bo, e.bi, e.cp, e.dds, e.mc, e.base, e.wires];

						break;
					default:
						break;
				}
				CanvasUtil.set(_.flatten(show), "visible", true);
				CanvasUtil.set(_.flatten(hide), "visible", false);

			});
			paper.view.update();
		},
		show: function(now){
			if(this.state) return;
			this.state = true;
			if(now){$("#view-list").show(); return;}
			$("#view-list").toggle("slide", { direction: "up" }, 300);
		},
		hide: function(now){
			if(!this.state) return;
			this.state = false;
			if(now){$("#view-list").hide(); return;}
			$("#view-list").toggle("slide", { direction: "up" }, 300);
		}
	}
</script>
<!-- 

Pipeline.getElements = function() {
		return {
				art: display.queryPrefix('ART'),
				diff: display.queryPrefix('DIF'),
				leds: display.queryPrefix('NLED'),
				bo: display.queryPrefix('BO'),
				bi: display.queryPrefix('BI'),
				cp: display.queryPrefix('CP'),
				dds: display.queryPrefix('DDS'),
				mc: display.queryPrefix("MC"),
				base: display.queryPrefix("BASE"),
				wires: display.queryPrefix("WIRE")
		}
} -->

<div id="views">
	<button id="view-icon" class="pull-right btn btn-primary">
		<span class="glyphicon glyphicon-globe"></span>
	</button>
	<br class="clearfix"/>
	<div id="view-list">
		<ul>
			<li class="active">
				<span>NORMAL</span>
				<button name="normal" class="view btn-sm btn btn-primary">
				 <span class="glyphicon glyphicon-globe"></span>
				</button>
			</li>
			 <li>
				<span>COLORED RAYS</span>
				<button name="rays" class="view btn-sm btn btn-danger">
					R
				</button>
			</li>
			<li>
				<span>WHITE RAYS</span>
				<button name="white_rays" class="view btn-sm btn btn-info">
					W
				</button>
			</li>
			<li>
				<span>LIGHTS OUT</span>
				<button name="lights" class="view btn-sm btn btn-success">
					L
				</button>
			</li>
		</ul>
	</div>
</div>

<style type="text/css">
	#views{
			font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
			padding: 4px 8px;
			color: #AAA;
			position: absolute;
			z-index: 1000;
			top: 60px;
			right: 25px;
			z-index: -1;
			/*text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);*/
	 }
		.view{
			float: right;
			width: 20px;
			padding: 1px;
			height: 20px;
			margin-left: 5px;
		}
		.view:focus{
			outline: none;
		}
		#view-icon{
			width: 40px;
		}
			#view-icon:focus{
				outline: none;
			}
		#view-list{
			width: 175px;
			text-align: right;
			text-decoration: none;

		}
			#view-list ul{
				list-style-type: none;
			}
			#view-list ul li{
				margin: 2px 0;
			}
			#view-list ul li.active{
				color: #888;
			}
</style>
