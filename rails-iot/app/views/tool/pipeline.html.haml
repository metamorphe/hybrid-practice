:javascript
  var zb, cp, bb, vm, pm, gui, displays = [], ws; 
  var p = Pipeline;
  var files = #{@files.to_json.html_safe};
  var DEFAULT_PIPE_FILE = "example_hairpiece_camera_ready.svg";
  
  $(function(){
    // Utility.paperSetup();
    ws = new WebStorage();
    $("#shade").fadeOut();
    
    dom = $('#main-canvas');
    fs = new ProjectFileManager({
      paper: Utility.paperSetup(dom),
      files: files, 
      selector: $("#file-selector"),
      onLoad: function(data){
        zb = new ZoomBar($("#zoom-bar"), 1.0, paper);
        loadCustomLibraries();
        pm = new PipeManager();
      }
    });

    
    $('#png-download').click(function(){
        var result = CanvasUtil.queryPrefix("RESULT");
        if (_.isEmpty(result)){console.warn("No RESULT wrapper found for export"); return;}
        result = result[0]
        console.log("FINAL DIMENSIONS", 
          Ruler.pts2mm(result.strokeBounds.width).toFixed(2), "mm x", 
          Ruler.pts2mm(result.strokeBounds.height).toFixed(2), "mm x",
          result.model_height.toFixed(2), "mm"
        );
        result.fitBounds(paper.view.bounds.expand(-5))
        var name = fs.getName()
        var fn = name + "_" + pm.getCurrentView();
        ButtonExporter.exportPNG(result, fn, $(this));
    });
    $('#svg-download').click(function(){
      paper.view.zoom = 1;
      name = fs.getName()
      var fn = name + "_" + pm.getCurrentView();
      ButtonExporter.exportSVG(fn);           
    });
    // $('#view-list ul li button[name="reflector"]').click();
  });
= render :partial => "tool/levels/file_pipeline"

#views
  %button#view-icon.pull-right.btn.btn-primary EL
  %br.clearfix/
  #view-list
    %ul
      /
        <li class="active">
        <span>RAYTRACE</span> <button name="raytrace" class="view btn-sm btn btn-info"> RT</button>
        </li>
      %li
        %span MOLD
        %button.view.btn-sm.btn.btn-info{:name => "mold"} M
      %li
        %span DIFFUSER
        %button.view.btn-sm.btn.btn-info{:name => "diffuser"} D
      %br/
      %li
        %span CONE
        %button.view.btn-sm.btn.btn-danger{:name => "cones"} S
      %li
        %span CONE LENS
        %button.view.btn-sm.btn.btn-danger{:name => "cone_lens"} SL
      %li
        %span SIDE EMIT REFL
        %button.view.btn-sm.btn.btn-danger{:name => "side_emit_reflector"} SR
      %br/
      %li
        %span TIR LENS
        %button.view.btn-sm.btn.btn-danger{:name => "tir_lens"} TL
      %li
        %span TIR REF
        %button.view.btn-sm.btn.btn-danger{:name => "tir_reflector"} TR
      %br/
      %li
        %span REF
        %button.view.btn-sm.btn.btn-danger{:name => "reflector"} R
      %br/
      %li
        %span NO LENS
        %button.view.btn-sm.btn.btn-danger{:name => "no_lens"} NL
      %br/
      %li
        %span SPACER
        %button.view.btn-sm.btn.btn-warning{:name => "spacer"} S
      %li
        %span CIRCUIT
        %button.view.btn.btn-sm.btn-warning{:name => "circuit"} C
      %li
        %span BASE
        %button.view.btn.btn-sm.btn-warning{:name => "base"} B
      %br/
      %li
        %span CODE
        %button.view.btn-sm.btn.btn-warning{:name => "code"} C
.canvas-container
  %canvas#main-canvas

= render :partial => "modals"
= render :partial => "zoom_bar"
