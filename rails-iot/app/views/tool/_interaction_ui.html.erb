<script type="text/javascript">
  $(function(){
    $( ".drag-hoz" ).draggable({ axis: "x", snap: "keyframe, transition, button.trigger", snapMode: "outer" });
    
    $( ".resizable-hoz" ).resizable({
      handles: "n, e, s, w"
    });
    $('.hold-state li').click(function(){
      $(this).addClass('active').siblings().removeClass('active');
      var parents = $(this).parents('transition, .trigger, keyframe');
      console.log("PARENTS", parents);
      parents.data('value', $(this).data('value'));
    });

    $('.trigger').click(function(){
      var keyframes = $(this).siblings('keyframe');
      console.log('Running', $(this).html());

      _.each(keyframes, function(keyframe){
        var selectors = $(keyframe).find("optiongroup.selectors").children('selector');
        var behaviors = $(keyframe).find("optiongroup.behaviors").children('behavior');
        selectors = _.map(selectors, function(selector){ return $(selector).attr('data-fn'); })
        behaviors = _.map(behaviors, function(behavior){ return $(behavior).attr('data-fn'); })
        console.log(selectors, behaviors);

        var collection = _.chain(selectors).map(function(selector){
          return sl[selector]();
        }).flatten().value();

    
        console.log(collection, behaviors);

        _.each(behaviors, function(behavior){
          qb[behavior](collection);
        });

      });
    });
    $(".add-big").click(function(){
       var dom = $('keyframe.template').clone().removeClass('template');
       dom.insertBefore($(this));//.parent().append(dom);
       enableDirectManipulation();
    });

    enableDirectManipulation();
  });

function enableDirectManipulation(){
   // console.log("BEHAVIORS", $('behavior'));  
    $('behavior').droppable({
      accept: "div.library-block.behavior",
      classes: {
        "ui-droppable-active": "ui-state-highlight"
      },
      drop: function( event, ui ) {
        console.log($(ui.draggable).attr('id'));
        $(this).attr('data-name', $(ui.draggable).attr('id'));
        $(this).attr('data-fn', $(ui.draggable).attr('data-fn'));
        $(this).html($(ui.draggable).find('img').clone());
        console.log(ui);
      }
    });

    $('selector').droppable({
      accept: "div.library-block.selector",
      classes: {
        "ui-droppable-active": "ui-state-highlight"
      },
      drop: function( event, ui ) {
        console.log($(ui.draggable).attr('id'));
        $(this).attr('data-name', $(ui.draggable).attr('id'));
        $(this).attr('data-fn', $(ui.draggable).attr('data-fn'));
        $(this).html($(ui.draggable).find('img').clone());
        console.log(ui);
      }
    });
}

function Transition(){
  this.init();
}
Transition.prototype = {
  init: function(){
    this.dom = $('#transition-template').clone().attr('id', '').removeClass('template');
    this.dom.find('.hold-state li').click(function(){
      $(this).addClass('active').siblings().removeClass('active');
      var parents = $(this).parents('transition, .trigger, keyframe');
      console.log("PARENTS", parents);
      parents.data('value', $(this).data('value'));
    });
    this.dom.data('value', 'no-transition'); // default value
    this.dom.data('duration', '20'); // default value
  }, 
  val: function(){
    return this.dom.data('value');
  }, 
  duration: function(){
    return parseInt(this.dom.data('duration'));
  }
}

function Event(){
  this.init();
}
Event.prototype = {
  init: function(){
    this.dom = $('#event-template').clone().attr('id', '').removeClass('template');
  }, 
  add: function(){

  }
}


</script>

<!-- TEMPLATES -->
<transition id="transition-template" class="template vert-centered">
  <options class="short hoz"> 
    <option> 20ms </option>
  </options>
  <options class="tall hoz"> 
    <div class="dropdown">  
      <button id="transition" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="btn btn-xxs  btn-primary">
        <span class="glyphicon glyphicon-random"></span>
      </button>
      <ul class="dropdown-menu hold-state" aria-labelledby="transition"> 
        <li  data-value="no-transition" class="active"><a href="#">No Transition</a></li> 
        <li data-value="delay" ><a href="#">Delay</a></li> 
        <li data-value="cross-dissolve"><a href="#">Cross-Dissolve</a></li> 
        <li data-value="fade-on"><a href="#">Fade to On</a></li>
        <li data-value="fade-off"><a href="#">Fade to Off</a></li>
      </ul>
    </div>
  </options>
</transition>

<keyframe class="template vert drag-hoz resizable-hoz">
  <options class="short hoz"> 
    <option class="flex-item"> 20 ms<span class="glyphicon glyphicon-repeat"></span> </option>
    <option class="flex-item"> 
        <span class="glyphicon glyphicon-repeat"></span>
    </option>
  </options>
  <options class="tall hoz"> 
    <optiongroup class="selectors vert">
        <selector data-fn="all" class="vert-centered"><%=image_tag "/actuation/selectors/all.png", :width => "100%" %></selector>
        <button class="btn btn-xxs btn-primary">
          <span class="glyphicon glyphicon-plus"></span>
        </button>
    </optiongroup>
    <optiongroup  class="behaviors vert">
        <behavior data-fn="allRamp" class="vert-centered"><%=image_tag "/actuation/behaviors/ramp.png", :width => "100%" %></behavior>
        <button class="btn btn-xxs btn-primary">
          <span class="glyphicon glyphicon-plus"></span>
        </button>
    </optiongroup>
  </options>
</keyframe>
<!-- END TEMPLATES -->



<group class="vert">
  <event class="hoz">
      <button type="trigger" class="btn-primary trigger">
        onStation
      </button>

     <transition class="vert-centered">
        <p> 20ms </p>
      

        <div class="dropdown">  
          <button id="transition" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="btn btn-xs btn-transparent">
            <span class="glyphicon glyphicon-random"></span>
          </button>
          <ul class="dropdown-menu hold-state" aria-labelledby="transition"> 
            <li  data-value="no-transition" class="active"><a href="#">No Transition</a></li> 
            <li data-value="delay" ><a href="#">Delay</a></li> 
            <li data-value="cross-dissolve"><a href="#">Cross-Dissolve</a></li> 
            <li data-value="fade-on"><a href="#">Fade to On</a></li>
            <li data-value="fade-off"><a href="#">Fade to Off</a></li>
          </ul>
        </div>
      </transition>

      <keyframe class="vert drag-hoz resizable-hoz">
        
        <div class="keyframe-options"> 
          <div class="duration" style='width: 50%;'> 20 ms </div> 
          
          <div class="dropdown" style='width: 50%;'>  
            <button id="transition" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="btn btn-xs btn-transparent">
              <span class="glyphicon glyphicon-repeat"></span>
            </button>
            <ul class="dropdown-menu hold-state" aria-labelledby="transition"> 
              <li data-value="repeat" ><a href="#">Repeat</a></li> 
              <li data-value="once-repeat"><a href="#">Repeat Once</a></li> 
              <li data-value="no-repeat"><a href="#">No Repeat</a></li>
            </ul>
          </div>         
        </div>

        <options class="keyframe-params"> 
              <selector data-fn="all" class="vert-centered">
                <%=image_tag "/actuation/selectors/all.png" %></selector>
              <behavior data-fn="allRamp" class="vert-centered">
                <%=image_tag "/actuation/behaviors/ramp.png" %>
              </behavior>
        </options>

      </keyframe>
      <button id="keyframe-adder" class="add-big btn btn-xs btn-primary">
          <span class="glyphicon glyphicon-plus"></span>
      </button>
  </event>
</group>

<script type="text/javascript">
$(function(){

});
</script>

<style>
li.active{
  background: #00A8E1;
}
group{
  height: 300px;
  /*overflow: scroll;*/
}





      

</style>